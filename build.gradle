plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'org.sonarqube' version '2.8'
}

group = 'com.fptu.swp'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.firebase:firebase-admin:6.13.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "ppr_api"
        property "sonar.organization", "ppr"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "c3c05592ccd7a821d6bc78d292b4b5ce03465004"
    }
}

test {
    useJUnitPlatform()
}
